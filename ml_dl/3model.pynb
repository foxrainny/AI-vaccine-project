{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Untitled","provenance":[],"private_outputs":true,"collapsed_sections":[],"mount_file_id":"1Ec5Vo1sQSS4fYshHNnLD5uc89f3sXB9H","authorship_tag":"ABX9TyNC4VdN2+/f1EkJ3JTS/TRr"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"WaWM5OALgObB","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import train_test_split\n","from sklearn import svm, metrics\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","import pandas as pd\n","\n","malware_data = pd.read_csv('/content/drive/My Drive/test/mal & exe.csv')\n","data = malware_data[[\"OH_DLLchar0\",\"OH_DLLchar2\",\"packer\",\"E_text\"]]\n","label = malware_data[\"mal\"]\n","\n","train_data, test_data, train_label, test_label = train_test_split(data,label)\n","\n","clf = svm.SVC()\n","clf.fit(train_data, train_label)\n","result = clf.predict(test_data)\n","score1 = metrics.accuracy_score(result,test_label)\n","\n","clf2 = DecisionTreeClassifier(random_state=0)\n","clf2.fit(train_data, train_label)\n","score2 = clf.score(test_data,test_label)\n","\n","clf = KNeighborsClassifier(n_neighbors=10)\n","clf.fit(train_data, train_label)\n","score3 = clf.score(test_data,test_label)\n","if score1>=score2 and score1>score3:\n","    print(\"svm 정답률: \",score1)\n","elif score2>score1 and score2>score3:\n","    print(\"DecisionTree 정답률: \",score2)\n","else:\n","    print(\"K-NN 정답률: \",score3)"],"execution_count":0,"outputs":[]}]}